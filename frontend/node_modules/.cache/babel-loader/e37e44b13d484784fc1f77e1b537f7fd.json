{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js\";\nimport React, { useState, useContext, useRef } from 'react';\nimport Prism from \"prismjs\";\nimport \"./prism.css\";\nimport { Link } from 'react-router-dom';\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock } from './styles';\n\nfunction Projects() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(PageTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Projetos\"), React.createElement(Project, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ProjectTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Chat em tempo real com websockets\"), React.createElement(Link, {\n    to: '/projects/chat',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"=Clique aqui para testar\"), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side quanto no Server-side. O backend e o frontend s\\xE3o relativamente simples, como podemos ver abaixo:\"), React.createElement(CodeBlock, {\n    className: \"brush: python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Backend NodeJS\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`, \" \")), React.createElement(CodeBlock, {\n    className: \"brush: python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Frontend ReactJS\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, `import React, { useState, useEffect, useRef, useMemo } from 'react';\n\nimport socket from \"../../../services/socket\";\n\nimport { Container, MessageContainer, Message, MessageUser, \n    MessageText, MessageDate, InputGroup, InputText, LabelInput, \n    InputMessage, SendButtonInput } from './styles';\n\nfunction Chat() {\n    const [messages, setMessages] = useState([]);\n    const [recivedMessage, setRecivedMessage] = useState(null);\n    \n    const messageText = useRef();\n    const username = useRef();\n\n    useMemo(() => { \n        socket.on('recivedMessage', message => {\n            setRecivedMessage(message);\n            console.log(message);\n        })\n    }, []);\n\n    useEffect(()=> {\n        if(recivedMessage) setMessages([...messages, recivedMessage]);\n    },[recivedMessage]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const date = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");;\n\n        const newMessage = {\n            id: 0,\n            username: username.current.value,\n            messageText: messageText.current.value,\n            date,\n        }\n\n        socket.emit('sendMessage', newMessage);\n\n        setMessages([...messages, newMessage]);\n\n        messageText.current.value = '';\n    }\n        ...`, \" \")), React.createElement(CodeBlock, {\n    className: \"brush: python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"socket.js\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, `import io from \"socket.io-client\";\n\nconst socket = io(process.env.REACT_APP_CHATAPP || 'https://bryan-diniz-chat.herokuapp.com', {});\nsocket.on('connect', () => { console.log('[IO] Connect => Connection established') });\n\nexport default socket;`, \" \"))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js"],"names":["React","useState","useContext","useRef","Prism","Link","Container","Project","PageTitle","ProjectTitle","ProjectDescription","CodeBlock","Projects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,YAAxC,EAAsDC,kBAAtD,EAA0EC,SAA1E,QAA2F,UAA3F;;AAEA,SAASC,QAAT,GAAoB;AAEhB,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAGI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oOAHJ,EAQI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;;;;;;;;;;;;;;;;;;yCAFT,MAHJ,CARJ,EAqCI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAFT,MAHJ,CArCJ,EA2FI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEnB;;;;;uBAFmB,MAHJ,CA3FJ,CAHJ,CADJ;AAmHH;;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext, useRef } from 'react';\nimport Prism from \"prismjs\";\nimport \"./prism.css\";\n\nimport { Link } from 'react-router-dom';\n\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock } from './styles';\n\nfunction Projects() {\n\n    return (\n        <Container>\n            <PageTitle>Projetos</PageTitle>\n\n            <Project>\n                <ProjectTitle>Chat em tempo real com websockets</ProjectTitle>\n                <Link to={'/projects/chat'}>=Clique aqui para testar</Link>\n                <ProjectDescription>\n                    Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side\n                    quanto no Server-side. O backend e o frontend são relativamente simples, como podemos ver abaixo:\n                </ProjectDescription>\n\n                <CodeBlock className=\"brush: python\">\n                    <h3>Backend NodeJS</h3>\n\n                    <code className=\"language-javascript\">\n                        {\n                            `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`\n                        } </code>\n\n                </CodeBlock>\n\n                <CodeBlock className=\"brush: python\">\n                    <h3>Frontend ReactJS</h3>\n\n                    <code className=\"language-javascript\">\n                        {\n                            `import React, { useState, useEffect, useRef, useMemo } from 'react';\n\nimport socket from \"../../../services/socket\";\n\nimport { Container, MessageContainer, Message, MessageUser, \n    MessageText, MessageDate, InputGroup, InputText, LabelInput, \n    InputMessage, SendButtonInput } from './styles';\n\nfunction Chat() {\n    const [messages, setMessages] = useState([]);\n    const [recivedMessage, setRecivedMessage] = useState(null);\n    \n    const messageText = useRef();\n    const username = useRef();\n\n    useMemo(() => { \n        socket.on('recivedMessage', message => {\n            setRecivedMessage(message);\n            console.log(message);\n        })\n    }, []);\n\n    useEffect(()=> {\n        if(recivedMessage) setMessages([...messages, recivedMessage]);\n    },[recivedMessage]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const date = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");;\n\n        const newMessage = {\n            id: 0,\n            username: username.current.value,\n            messageText: messageText.current.value,\n            date,\n        }\n\n        socket.emit('sendMessage', newMessage);\n\n        setMessages([...messages, newMessage]);\n\n        messageText.current.value = '';\n    }\n        ...`\n                        } </code>\n\n                </CodeBlock>\n\n                <CodeBlock className=\"brush: python\">\n                    <h3>socket.js</h3>\n\n                    <code className=\"language-javascript\">\n                        {\n`import io from \"socket.io-client\";\n\nconst socket = io(process.env.REACT_APP_CHATAPP || 'https://bryan-diniz-chat.herokuapp.com', {});\nsocket.on('connect', () => { console.log('[IO] Connect => Connection established') });\n\nexport default socket;`\n                        } </code>\n\n                </CodeBlock>\n\n            </Project>\n\n\n        </Container>\n    );\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}