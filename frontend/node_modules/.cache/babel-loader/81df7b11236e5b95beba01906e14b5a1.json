{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/index.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport io from \"socket.io-client\";\nimport { Container, PageTitle, MessageContainer, Message, MessageUser, MessageText, MessageDate, InputGroup, InputText, LabelInput, InputMessage, SendButtonInput, InputTextBox, Button } from './styles';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const messageText = useRef();\n  const username = useRef();\n  useEffect(() => {\n    const connectionOptions = {\n      'force new connection': true,\n      'reconnectionAttempts': 'Infinity',\n      'timeout': 10000,\n      'transports': ['websocket']\n    };\n    const socket = io('ws://localhost:8080', connectionOptions);\n    socket.on('connect', () => {\n      console.log('[IO] Connect => Connection established');\n    });\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const date = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n    ;\n    const newMessage = {\n      id: 1,\n      username: username.current.value,\n      messageText: messageText.current.value,\n      date\n    };\n    await setMessages([...messages, newMessage]);\n    console.log(messages);\n  }\n\n  return React.createElement(Container, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Username\"), React.createElement(InputText, {\n    id: \"username\",\n    ref: username,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(MessageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, messages.map(m => React.createElement(Message, {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(MessageText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MessageUser, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, m.username), m.messageText), React.createElement(MessageDate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, m.date)))), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(InputMessage, {\n    id: \"message\",\n    placeholder: \"Enviar mensagem...\",\n    ref: messageText,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(SendButtonInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Enviar\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/index.js"],"names":["React","useState","useEffect","useContext","useRef","io","Container","PageTitle","MessageContainer","Message","MessageUser","MessageText","MessageDate","InputGroup","InputText","LabelInput","InputMessage","SendButtonInput","InputTextBox","Button","Chat","messages","setMessages","messageText","username","connectionOptions","socket","on","console","log","handleSubmit","event","preventDefault","date","Date","toTimeString","replace","newMessage","id","current","value","map","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport io from \"socket.io-client\";\n\nimport { Container, PageTitle, MessageContainer, Message, MessageUser, MessageText, MessageDate, InputGroup, InputText, LabelInput, InputMessage, SendButtonInput, InputTextBox, Button } from './styles';\n\n\nfunction Chat() {\n\n    const [messages, setMessages] = useState([]);\n    const messageText = useRef();\n    const username = useRef();\n\n    useEffect(() => {\n        const connectionOptions = {\n            'force new connection': true,\n            'reconnectionAttempts': 'Infinity',\n            'timeout': 10000,\n            'transports': ['websocket']\n        }\n\n        const socket = io('ws://localhost:8080', connectionOptions);\n        socket.on('connect', () => { console.log('[IO] Connect => Connection established') });\n\n    }, []);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const date = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");;\n\n        const newMessage = {\n            id: 1,\n            username: username.current.value,\n            messageText: messageText.current.value,\n            date,\n        }\n\n        await setMessages([...messages, newMessage]);\n\n        console.log(messages);\n    }\n\n    return (\n        <Container onSubmit={handleSubmit}>\n            {/* <PageTitle>Chat websocket</PageTitle> */}\n\n            <InputGroup>\n                <LabelInput htmlFor=\"username\">Username</LabelInput>\n\n                <InputText\n                    id=\"username\"\n                    ref={username}\n                    required />\n            </InputGroup>\n\n            <MessageContainer>\n\n                {messages.map(m => (\n                    <Message key={m.id}>\n                        <MessageText>\n                            <MessageUser>{m.username}</MessageUser>\n                            {m.messageText}\n                        </MessageText>\n                        <MessageDate>{m.date}</MessageDate>\n                    </Message>\n                ))}\n\n                {/* <Message>\n                    <MessageText>\n                        <MessageUser>User02:</MessageUser>\n                        Ut sodales sem eu elementum tristique. Curabitur ligula sem, imperdiet sit amet arcu eget,\n                        faucibus luctus purus. Vivamus justo urna, imperdiet ut elit vel, maximus placerat sapien.\n                    </MessageText>\n                    <MessageDate>21:00</MessageDate>\n                </Message>\n\n                <Message>\n                    <MessageText>\n                        <MessageUser>User03:</MessageUser>\n                        Mauris viverra facilisis mi, elementum tincidunt lectus volutpat non. Etiam viverra ex turpis,\n                        in fermentum nibh mattis scelerisque. Duis nec congue justo.\n                    </MessageText>\n                    <MessageDate>22:00</MessageDate>\n                </Message> */}\n            </MessageContainer>\n\n            <InputGroup>\n                <InputMessage\n                    id=\"message\"\n                    placeholder=\"Enviar mensagem...\"\n                    ref={messageText}\n                    required />\n\n                <SendButtonInput>Enviar</SendButtonInput>\n            </InputGroup>\n\n        </Container>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}