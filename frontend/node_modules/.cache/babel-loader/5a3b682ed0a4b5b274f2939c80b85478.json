{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/index.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { Container, PageTitle, MessageContainer, Message, MessageUser, MessageText, MessageDate, InputGroup, InputText, LabelInput, InputMessage, SendButtonInput, InputTextBox, Button } from './styles';\n\nfunction Chat() {\n  const [endpoint, setEndpoint] = useState('http://localhost:3333');\n  const [messages, setMessages] = useState([{\n    id: 1,\n    username: 'username',\n    messageText: 'texto aqui',\n    date: '00:00'\n  }]);\n  const messageText = useRef();\n  const username = useRef();\n  useEffect(() => {\n    //const socket = socketIOClient('http://localhost:3333');\n    //socket.on('connect', () => {});\n    console.log('Conectado ao websocket');\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    var date = new Date();\n    const newMessage = {\n      id: 1,\n      username: username.current.value,\n      messageText: messageText.current.value,\n      date\n    };\n    await setMessages(...messages, newMessage);\n    console.log(messages);\n  }\n\n  return React.createElement(Container, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Username\"), React.createElement(InputText, {\n    id: \"username\",\n    ref: username,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(MessageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, messages.map(m => React.createElement(Message, {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MessageText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MessageUser, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, m.username), m.messageText), React.createElement(MessageDate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, m.date)))), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(InputMessage, {\n    id: \"message\",\n    placeholder: \"Enviar mensagem...\",\n    ref: messageText,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(SendButtonInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Enviar\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/index.js"],"names":["React","useState","useEffect","useContext","useRef","socketIOClient","Container","PageTitle","MessageContainer","Message","MessageUser","MessageText","MessageDate","InputGroup","InputText","LabelInput","InputMessage","SendButtonInput","InputTextBox","Button","Chat","endpoint","setEndpoint","messages","setMessages","id","username","messageText","date","console","log","handleSubmit","event","preventDefault","Date","newMessage","current","value","map","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nimport { Container, PageTitle, MessageContainer, Message, MessageUser, MessageText, MessageDate, InputGroup, InputText, LabelInput, InputMessage, SendButtonInput, InputTextBox, Button } from './styles';\n\nfunction Chat() {\n\n    const [endpoint, setEndpoint] = useState('http://localhost:3333');\n\n    const [messages, setMessages] = useState([{id: 1,\n        username: 'username',\n        messageText: 'texto aqui',\n        date: '00:00'}]);\n    const messageText = useRef();\n    const username = useRef();\n\n    useEffect(() => {\n        //const socket = socketIOClient('http://localhost:3333');\n        //socket.on('connect', () => {});\n        console.log('Conectado ao websocket');\n    }, []);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        var date = new Date();\n\n        const newMessage = {\n            id: 1,\n            username: username.current.value,\n            messageText: messageText.current.value,\n            date,\n        }\n\n        await setMessages(...messages, newMessage);\n\n        console.log(messages);\n    }\n\n    return (\n        <Container onSubmit={handleSubmit}>\n            {/* <PageTitle>Chat websocket</PageTitle> */}\n\n            <InputGroup>\n                <LabelInput htmlFor=\"username\">Username</LabelInput>\n\n                <InputText\n                    id=\"username\"\n                    ref={username}\n                    required />\n            </InputGroup>\n\n            <MessageContainer>\n\n                {messages.map(m => (\n                    <Message key={m.id}>\n                        <MessageText>\n                            <MessageUser>{m.username}</MessageUser>\n                            {m.messageText}\n                        </MessageText>\n                        <MessageDate>{m.date}</MessageDate>\n                    </Message>\n                ))}\n\n                {/* <Message>\n                    <MessageText>\n                        <MessageUser>User02:</MessageUser>\n                        Ut sodales sem eu elementum tristique. Curabitur ligula sem, imperdiet sit amet arcu eget,\n                        faucibus luctus purus. Vivamus justo urna, imperdiet ut elit vel, maximus placerat sapien.\n                    </MessageText>\n                    <MessageDate>21:00</MessageDate>\n                </Message>\n\n                <Message>\n                    <MessageText>\n                        <MessageUser>User03:</MessageUser>\n                        Mauris viverra facilisis mi, elementum tincidunt lectus volutpat non. Etiam viverra ex turpis,\n                        in fermentum nibh mattis scelerisque. Duis nec congue justo.\n                    </MessageText>\n                    <MessageDate>22:00</MessageDate>\n                </Message> */}\n            </MessageContainer>\n\n            <InputGroup>\n                <InputMessage\n                    id=\"message\"\n                    placeholder=\"Enviar mensagem...\"\n                    ref={messageText}\n                    required />\n\n                <SendButtonInput>Enviar</SendButtonInput>\n            </InputGroup>\n\n        </Container>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}