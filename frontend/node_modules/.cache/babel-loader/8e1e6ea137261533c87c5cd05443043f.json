{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/my-app/src/components/Contact/index.js\";\nimport React, { useState, useContext } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { Container, Title, InputGroup, InputText, LabelInput, InputTextBox, Button } from './styles';\n\nfunction Contact() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n\n  async function handdleSubmit(event) {\n    event.preventDefault();\n    const data = {\n      name: event.target.name.value,\n      phone: event.target.phone.value,\n      email: event.target.email.value,\n      subject: event.target.subject.value\n    };\n    console.log(data);\n  }\n\n  return React.createElement(Container, {\n    onSubmit: handdleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Contato\"), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Nome\"), React.createElement(InputText, {\n    id: \"name\",\n    name: \"name\",\n    onBlur: e => setName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: 'phone',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Telefone\"), React.createElement(MaskedInput, {\n    className: \"MaskedInput\",\n    id: \"phone\",\n    id: \"name\",\n    mask: ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placehoder: \"(00) 0 0000-0000\",\n    guide: true,\n    onBlur: e => setPhone(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(InputText, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onBlur: e => setEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(InputTextBox, {\n    id: \"subject\",\n    name: \"subject\",\n    onBlur: e => setSubject(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Enviar\"));\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/my-app/src/components/Contact/index.js"],"names":["React","useState","useContext","MaskedInput","Container","Title","InputGroup","InputText","LabelInput","InputTextBox","Button","Contact","name","setName","phone","setPhone","email","setEmail","subject","setSubject","handdleSubmit","event","preventDefault","data","target","value","console","log","e"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport MaskedInput from 'react-text-mask';\n\nimport {\n    Container, Title, InputGroup, InputText, LabelInput, InputTextBox, Button\n} from './styles';\n\n\nfunction Contact() {\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('');\n\n\n    async function handdleSubmit(event) {\n        event.preventDefault();\n\n        const data = {\n            name: event.target.name.value,\n            phone: event.target.phone.value,\n            email: event.target.email.value,\n            subject: event.target.subject.value,\n        }\n\n        console.log(data);\n\n    }\n\n    return (\n        <Container onSubmit={handdleSubmit}>\n\n            <Title>Contato</Title>\n\n            <InputGroup>\n                <LabelInput htmlFor=\"name\">Nome</LabelInput>\n\n                <InputText\n                    id=\"name\"\n                    name=\"name\"\n                    onBlur={e => setName(e.target.value)}\n                    required />\n\n            </InputGroup>\n\n            <InputGroup>\n                <LabelInput htmlFor={'phone'}>Telefone</LabelInput>\n\n                <MaskedInput\n                    className=\"MaskedInput\"\n                    id=\"phone\"\n                    id=\"name\"\n                    mask={['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                    placehoder=\"(00) 0 0000-0000\"\n                    guide={true}\n                    onBlur={e => setPhone(e.target.value)}\n                    required />\n\n            </InputGroup>\n\n            <InputGroup>\n                <LabelInput htmlFor=\"email\">E-mail</LabelInput>\n\n                <InputText\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    onBlur={e => setEmail(e.target.value)}\n                    required />\n\n            </InputGroup>\n\n            <InputTextBox\n                id=\"subject\"\n                name=\"subject\"\n                onBlur={e => setSubject(e.target.value)}\n                required />\n\n            <Button>Enviar</Button>\n\n        </Container>\n    );\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}