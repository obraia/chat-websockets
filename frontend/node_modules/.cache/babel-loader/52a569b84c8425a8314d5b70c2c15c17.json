{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/components/Contact/index.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport api from '../../services/api';\nimport MaskedInput from 'react-text-mask';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Container, Title, InputGroup, InputText, LabelInput, InputTextBox, Button } from './styles';\n\nfunction Contact({\n  theme\n}) {\n  const [progressbarVisible, setProgressbarVisible] = useState(false);\n  const [validateCaptcha, setValidateCaptcha] = useState(false);\n  /*\n  useEffect(() => {\n      const reCaptcha = document.getElementById('rc-anchor-container');\n      reCaptcha.classList = `rc-anchor rc-anchor-normal rc-anchor-${theme.title}`;\n  }, [theme]);\n  */\n\n  function changeTheme() {\n    const reCaptcha = document.getElementById('rc-anchor-container');\n    reCaptcha.classList = `rc-anchor rc-anchor-normal rc-anchor-${theme.title}`;\n  }\n\n  async function handdleSubmit(event) {\n    event.preventDefault();\n    setProgressbarVisible(true);\n    const data = {\n      name: event.target.name.value,\n      phone: event.target.phone.value,\n      email: event.target.email.value,\n      subject: event.target.subject.value,\n      text: event.target.text.value\n    };\n    const response = await api.post('/email', data);\n    console.log(response);\n\n    if (response.status == 200) {}\n\n    setProgressbarVisible(false);\n  }\n\n  return React.createElement(Container, {\n    onSubmit: handdleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Contato\"), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Nome\"), React.createElement(InputText, {\n    id: \"name\",\n    name: \"name\",\n    onChange: () => changeTheme(),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: 'phone',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Telefone\"), React.createElement(MaskedInput, {\n    className: \"MaskedInput\",\n    id: \"phone\",\n    id: \"phone\",\n    mask: ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placehoder: \"(00) 0 0000-0000\",\n    guide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(InputText, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(LabelInput, {\n    htmlFor: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Assunto\"), React.createElement(InputText, {\n    id: \"subject\",\n    name: \"subject\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(InputTextBox, {\n    name: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), progressbarVisible ? React.createElement(CircularProgress, {\n    style: {\n      marginBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }) : null, !validateCaptcha ? React.createElement(ReCAPTCHA, {\n    sitekey: \"6Ld5odwUAAAAALZSMRJ1wKE3vszFTFocoP3pC-WB\",\n    onChange: () => setValidateCaptcha(true),\n    className: \"recaptcha\",\n    style: {\n      marginBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Enviar\"));\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/components/Contact/index.js"],"names":["React","useState","useContext","useEffect","ThemeContext","api","MaskedInput","CircularProgress","ReCAPTCHA","Container","Title","InputGroup","InputText","LabelInput","InputTextBox","Button","Contact","theme","progressbarVisible","setProgressbarVisible","validateCaptcha","setValidateCaptcha","changeTheme","reCaptcha","document","getElementById","classList","title","handdleSubmit","event","preventDefault","data","name","target","value","phone","email","subject","text","response","post","console","log","status","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SACIC,SADJ,EACeC,KADf,EACsBC,UADtB,EACkCC,SADlC,EAC6CC,UAD7C,EACyDC,YADzD,EACuEC,MADvE,QAEO,UAFP;;AAKA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAExB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,KAAD,CAAtD;AAEA;;;;;;;AAOA,WAASqB,WAAT,GAAsB;AAClB,UAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAuB,wCAAuCT,KAAK,CAACU,KAAM,EAA1E;AACH;;AAED,iBAAeC,aAAf,CAA6BC,KAA7B,EAAoC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEA,UAAMY,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAEH,KAAK,CAACI,MAAN,CAAaD,IAAb,CAAkBE,KADf;AAETC,MAAAA,KAAK,EAAEN,KAAK,CAACI,MAAN,CAAaE,KAAb,CAAmBD,KAFjB;AAGTE,MAAAA,KAAK,EAAEP,KAAK,CAACI,MAAN,CAAaG,KAAb,CAAmBF,KAHjB;AAITG,MAAAA,OAAO,EAAER,KAAK,CAACI,MAAN,CAAaI,OAAb,CAAqBH,KAJrB;AAKTI,MAAAA,IAAI,EAAET,KAAK,CAACI,MAAN,CAAaK,IAAb,CAAkBJ;AALf,KAAb;AAQA,UAAMK,QAAQ,GAAG,MAAMlC,GAAG,CAACmC,IAAJ,CAAS,QAAT,EAAmBT,IAAnB,CAAvB;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,QAAIA,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA4B,CAE3B;;AAEDxB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;;AAED,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAES,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,QAAQ,EAAE,MAAMN,WAAW,EAH/B;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAJJ,EAcI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,GAArC,EAA0C,IAA1C,EAAgD,IAAhD,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,GAAlE,EAAuE,IAAvE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,IAAzF,CAJV;AAKI,IAAA,UAAU,EAAC,kBALf;AAMI,IAAA,KAAK,EAAE,IANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAdJ,EA0BI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CA1BJ,EAoCI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAGI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,SADP;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CApCJ,EA6CI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,EAiDKJ,kBAAkB,GAAG,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAE0B,MAAAA,YAAY,EAAE;AAAhB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuD,IAjD9E,EAmDK,CAACxB,eAAD,GAEG,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,0CADZ;AAEI,IAAA,QAAQ,EAAE,MAAMC,kBAAkB,CAAC,IAAD,CAFtC;AAGI,IAAA,SAAS,EAAC,WAHd;AAII,IAAA,KAAK,EAAE;AAAEuB,MAAAA,YAAY,EAAE;AAAhB,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,GAMyC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzD9C,CADJ;AA8DH;;AAED,eAAe5B,OAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport api from '../../services/api';\nimport MaskedInput from 'react-text-mask';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nimport {\n    Container, Title, InputGroup, InputText, LabelInput, InputTextBox, Button\n} from './styles';\n\n\nfunction Contact({ theme }) {\n\n    const [progressbarVisible, setProgressbarVisible] = useState(false);\n    const [validateCaptcha, setValidateCaptcha] = useState(false);\n\n    /*\n    useEffect(() => {\n        const reCaptcha = document.getElementById('rc-anchor-container');\n        reCaptcha.classList = `rc-anchor rc-anchor-normal rc-anchor-${theme.title}`;\n    }, [theme]);\n    */\n\n    function changeTheme(){\n        const reCaptcha = document.getElementById('rc-anchor-container');\n        reCaptcha.classList = `rc-anchor rc-anchor-normal rc-anchor-${theme.title}`;\n    }\n\n    async function handdleSubmit(event) {\n        event.preventDefault();\n\n        setProgressbarVisible(true);\n\n        const data = {\n            name: event.target.name.value,\n            phone: event.target.phone.value,\n            email: event.target.email.value,\n            subject: event.target.subject.value,\n            text: event.target.text.value,\n        }\n\n        const response = await api.post('/email', data);\n\n        console.log(response);\n\n        if (response.status == 200) {\n\n        }\n\n        setProgressbarVisible(false);\n    }\n\n    return (\n        <Container onSubmit={handdleSubmit}>\n\n            <Title>Contato</Title>\n\n            <InputGroup>\n                <LabelInput htmlFor=\"name\">Nome</LabelInput>\n\n                <InputText\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={() => changeTheme()}\n                    required />\n            </InputGroup>\n\n            <InputGroup>\n                <LabelInput htmlFor={'phone'}>Telefone</LabelInput>\n\n                <MaskedInput\n                    className=\"MaskedInput\"\n                    id=\"phone\"\n                    id=\"phone\"\n                    mask={['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                    placehoder=\"(00) 0 0000-0000\"\n                    guide={true} />\n            </InputGroup>\n\n            <InputGroup>\n                <LabelInput htmlFor=\"email\">E-mail</LabelInput>\n\n                <InputText\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required />\n            </InputGroup>\n\n            <InputGroup>\n                <LabelInput htmlFor=\"subject\">Assunto</LabelInput>\n\n                <InputText\n                    id=\"subject\"\n                    name=\"subject\"\n                    required />\n            </InputGroup>\n\n            <InputTextBox\n                name=\"text\"\n                required />\n\n            {progressbarVisible ? <CircularProgress style={{ marginBottom: 15 }} /> : null}\n\n            {!validateCaptcha ?\n\n                <ReCAPTCHA\n                    sitekey=\"6Ld5odwUAAAAALZSMRJ1wKE3vszFTFocoP3pC-WB\"\n                    onChange={() => setValidateCaptcha(true)}\n                    className=\"recaptcha\"\n                    style={{ marginBottom: 15 }} /> : <Button>Enviar</Button>}\n\n        </Container>\n    );\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}