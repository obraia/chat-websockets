{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/Description/index.js\";\nimport React from 'react';\nimport chatScreenshot from './img/screenshot.jpg';\nimport { Link } from 'react-router-dom';\nimport { Project, ProjectTitle, ProjectDescription, ProjectContainer, CodeBlock } from './styles';\n\nfunction ChatDescription() {\n  function newTab(url) {\n    window.open(url, '_blank');\n  }\n\n  return React.createElement(Project, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/projects/chat',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ProjectTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Chat com websockets\")), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side quanto no Server-side. O backend e o frontend s\\xE3o relativamente simples, como podemos ver abaixo:\"), React.createElement(ProjectContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(CodeBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Backend NodeJS\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`, \" \")), React.createElement(\"img\", {\n    src: chatScreenshot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"A comunica\\xE7\\xE3o do frontend com o backend \\xE9 feito com o\", React.createElement(\"a\", {\n    onClick: () => newTab('https://www.npmjs.com/package/socket.io-client'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" socket.io-client \"), \"atrav\\xE9s de um script de poucas linhas:\"), React.createElement(ProjectContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CodeBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Script socket.js (ReactJS)\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, `import io from \"socket.io-client\";\n\nconst socket = io(process.env.REACT_APP_CHATAPP || 'https://BACKEND-URL.com', {});\nsocket.on('connect', () => { console.log('[IO] Connect => Connection established') });\n\nexport default socket;`, \" \"))), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"O c\\xF3digo completo pode ser encontrado no meu reposit\\xF3rio do github\", React.createElement(\"a\", {\n    onClick: () => newTab('https://github.com/obraia'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" clicando aqui\"), \".\"));\n}\n\nexport default ChatDescription;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/Description/index.js"],"names":["React","chatScreenshot","Link","Project","ProjectTitle","ProjectDescription","ProjectContainer","CodeBlock","ChatDescription","newTab","url","window","open"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,kBAAhC,EAAoDC,gBAApD,EAAsEC,SAAtE,QAAuF,UAAvF;;AAEA,SAASC,eAAT,GAA2B;AAEvB,WAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjBC,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,QAAjB;AACH;;AAED,SAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAKI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oOALJ,EAUI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;;;;;;;;;;;;;;;;;;yCAFT,MAHJ,CADJ,EA6BI;AAAK,IAAA,GAAG,EAAET,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CAVJ,EA0CI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAEQ;AAAG,IAAA,OAAO,EAAE,MAAMQ,MAAM,CAAC,gDAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFR,8CA1CJ,EAgDI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;;;;uBAFT,MAHJ,CADJ,CAhDJ,EAiEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAEQ;AAAG,IAAA,OAAO,EAAE,MAAMA,MAAM,CAAC,2BAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFR,MAjEJ,CAFJ;AA0EH;;AAED,eAAeD,eAAf","sourcesContent":["import React from 'react';\nimport chatScreenshot from './img/screenshot.jpg';\n\nimport { Link } from 'react-router-dom';\n\nimport { Project, ProjectTitle, ProjectDescription, ProjectContainer, CodeBlock } from './styles';\n\nfunction ChatDescription() {\n\n    function newTab(url) {\n        window.open(url, '_blank');\n    }\n\n    return (\n\n        <Project>\n            <Link to={'/projects/chat'}>\n                <ProjectTitle>Chat com websockets</ProjectTitle>\n            </Link>\n\n            <ProjectDescription>\n                Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side\n                quanto no Server-side. O backend e o frontend são relativamente simples, como podemos ver abaixo:\n                </ProjectDescription>\n\n            <ProjectContainer>\n                <CodeBlock>\n                    <h3>Backend NodeJS</h3>\n\n                    <code className=\"language-javascript\">\n                        {\n                            `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`\n                        } </code>\n\n                </CodeBlock>\n                <img src={chatScreenshot} />\n            </ProjectContainer>\n\n            <ProjectDescription>\n                A comunicação do frontend com o backend é feito com o\n                    <a onClick={() => newTab('https://www.npmjs.com/package/socket.io-client')}> socket.io-client </a>\n                através de um script de poucas linhas:\n            </ProjectDescription>\n\n            <ProjectContainer>\n                <CodeBlock>\n                    <h3>Script socket.js (ReactJS)</h3>\n\n                    <code className=\"language-javascript\">\n                        {\n                            `import io from \"socket.io-client\";\n\nconst socket = io(process.env.REACT_APP_CHATAPP || 'https://BACKEND-URL.com', {});\nsocket.on('connect', () => { console.log('[IO] Connect => Connection established') });\n\nexport default socket;`\n                        } </code>\n\n                </CodeBlock>\n            </ProjectContainer>\n\n            <ProjectDescription>\n                O código completo pode ser encontrado no meu repositório do github\n                    <a onClick={() => newTab('https://github.com/obraia')}> clicando aqui</a>.\n            </ProjectDescription>\n\n        </Project>\n    );\n}\n\nexport default ChatDescription;"]},"metadata":{},"sourceType":"module"}