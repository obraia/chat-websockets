{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js\";\nimport React, { useState, useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock, CodeLine } from './styles';\n\nfunction Projects() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(PageTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Projetos\"), React.createElement(Project, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/projects/chat',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(ProjectTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Chat em tempo real com websockets\")), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side quanto no Server-side. Tanto o backend quanto o frontend s\\xE3o simples, como podemos ver abaixo:\"), React.createElement(CodeBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"const express = require('express'\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"const http = require('http');\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"const app = express();\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"const server = http.createServer(app);\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"const io = require('socket.io').listen(server);\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"let messageId = 0;\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"io.on('connection', socket => \"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"console.log(`Socket conectado $socket.id`);\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"socket.on('sendMessage', data => \"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"data.id = messageId++;\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"socket.broadcast.emit('recivedMessage', data);\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"console.log(data);\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"});\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"});\"), React.createElement(CodeLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"server.listen(process.env.PORT || 3333);\"))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js"],"names":["React","useState","useContext","useRef","Link","Container","Project","PageTitle","ProjectTitle","ProjectDescription","CodeBlock","CodeLine","Projects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,YAAxC,EAAsDC,kBAAtD,EAA0EC,SAA1E,EAAqFC,QAArF,QAAqG,UAArG;;AAEA,SAASC,QAAT,GAAoB;AAEhB,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA5B,CADJ,EAGI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOAHJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ,EAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CALJ,EAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDANJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,EAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARJ,EASI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDATJ,EAUI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAVJ,EAWI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXJ,EAYI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAZJ,EAaI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbJ,EAcI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdJ,EAeI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfJ,EAgBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAhBJ,CARJ,CAHJ,CADJ;AAqCH;;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext, useRef } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock, CodeLine } from './styles';\n\nfunction Projects() {\n\n    return (\n        <Container>\n            <PageTitle>Projetos</PageTitle>\n\n            <Project>\n                <Link to={'/projects/chat'}><ProjectTitle>Chat em tempo real com websockets</ProjectTitle></Link>\n\n                <ProjectDescription>\n                    Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side\n                    quanto no Server-side. Tanto o backend quanto o frontend são simples, como podemos ver abaixo:\n                </ProjectDescription>\n\n                <CodeBlock>\n\n                    <CodeLine>const express = require('express'</CodeLine>\n                    <CodeLine>const http = require('http');</CodeLine>\n                    <CodeLine>const app = express();</CodeLine>\n                    <CodeLine>const server = http.createServer(app);</CodeLine>\n                    <CodeLine>const io = require('socket.io').listen(server);</CodeLine>\n                    <CodeLine>let messageId = 0;</CodeLine>\n                    <CodeLine>io.on('connection', socket => </CodeLine>\n                    <CodeLine>console.log(`Socket conectado $socket.id`);</CodeLine>\n                    <CodeLine>socket.on('sendMessage', data => </CodeLine>\n                    <CodeLine>data.id = messageId++;</CodeLine>\n                    <CodeLine>socket.broadcast.emit('recivedMessage', data);</CodeLine>\n                    <CodeLine>console.log(data);</CodeLine>\n                    <CodeLine>});</CodeLine>\n                    <CodeLine>});</CodeLine>\n                    <CodeLine>server.listen(process.env.PORT || 3333);</CodeLine>\n\n                </CodeBlock>\n\n            </Project>\n\n\n        </Container>\n    );\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}