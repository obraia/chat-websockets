{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/Description/index.js\";\nimport React from 'react';\nimport chatScreenshot from './img/screenshot.jpg';\nimport { Link } from 'react-router-dom';\nimport { Project, ProjectTitle, ProjectDescription, ProjectContainer, CodeBlock } from './styles';\n\nfunction ChatDescription() {\n  return React.createElement(Project, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/projects/chat',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ProjectTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Chat em tempo real com websockets\")), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side quanto no Server-side. O backend e o frontend s\\xE3o relativamente simples, como podemos ver abaixo:\"), React.createElement(ProjectContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CodeBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Backend NodeJS\"), React.createElement(\"code\", {\n    className: \"language-javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`, \" \")), React.createElement(\"img\", {\n    src: chatScreenshot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"O restante do c\\xF3digo pode ser encontrado no meu reposit\\xF3rio do github \", React.createElement(\"a\", {\n    href: \"/#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"clicando aqui\"), \".\"));\n}\n\nexport default ChatDescription;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/Chat/Description/index.js"],"names":["React","chatScreenshot","Link","Project","ProjectTitle","ProjectDescription","ProjectContainer","CodeBlock","ChatDescription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,kBAAhC,EAAoDC,gBAApD,EAAsEC,SAAtE,QAAuF,UAAvF;;AAEA,SAASC,eAAT,GAA2B;AAEvB,SAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA5B,CADJ,EAGI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oOAHJ,EAQI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;;;;;;;;;;;;;;;;;;yCAFT,MAHJ,CADJ,EA6BI;AAAK,IAAA,GAAG,EAAEP,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CARJ,EAyCI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAC0E;AAAG,IAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD1E,MAzCJ,CAFR;AAiDH;;AAED,eAAeO,eAAf","sourcesContent":["import React from 'react';\nimport chatScreenshot from './img/screenshot.jpg';\n\nimport { Link } from 'react-router-dom';\n\nimport { Project, ProjectTitle, ProjectDescription, ProjectContainer, CodeBlock } from './styles';\n\nfunction ChatDescription() {\n\n    return (\n\n            <Project>\n                <Link to={'/projects/chat'}><ProjectTitle>Chat em tempo real com websockets</ProjectTitle></Link>\n\n                <ProjectDescription>\n                    Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side\n                    quanto no Server-side. O backend e o frontend são relativamente simples, como podemos ver abaixo:\n                </ProjectDescription>\n\n                <ProjectContainer>\n                    <CodeBlock>\n                        <h3>Backend NodeJS</h3>\n\n                        <code className=\"language-javascript\">\n                            {\n                                `const express = require('express')\nconst http = require('http');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = require('socket.io').listen(server);\n\nlet messageId = 0;\n\nio.on('connection', socket => {\n    console.log('Socket conectado ' + socket.id);\n\n    socket.on('sendMessage', data => {\n        data.id = messageId++;\n        socket.broadcast.emit('recivedMessage', data);\n        console.log(data);\n    });\n});\n\nserver.listen(process.env.PORT || 3333);`\n                            } </code>\n\n                    </CodeBlock>\n                    <img src={chatScreenshot} />\n                </ProjectContainer>\n\n\n                <ProjectDescription>\n                    O restante do código pode ser encontrado no meu repositório do github <a href=\"/#\">clicando aqui</a>.\n                </ProjectDescription>\n\n            </Project>\n    );\n}\n\nexport default ChatDescription;"]},"metadata":{},"sourceType":"module"}