{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Programa\\xE7\\xE3o/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js\";\nimport React, { useState, useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock, CodeLine } from './styles';\n\nfunction Projects() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(PageTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Projetos\"), React.createElement(Project, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/projects/chat',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(ProjectTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Chat em tempo real com websockets\")), React.createElement(ProjectDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side quanto no Server-side. Tanto o backend quanto o frontend s\\xE3o simples, como podemos ver abaixo:\"), React.createElement(CodeBlock, {\n    className: \"brush: python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"const express = require('express')\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"const http = require('http');\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"const app = express();\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \"const server = http.createServer(app);\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"const io = require('socket.io').listen(server);\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \"let messageId = 0;\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"io.on('connection', socket => {\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"console.log(`Socket conectado ${socket.id}`);\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \"socket.on('sendMessage', data => {\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"data.id = messageId++;\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \"socket.broadcast.emit('recivedMessage', data);\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"console.log(data);\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"});\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"});\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \"server.listen(process.env.PORT || 3333);\"))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/bryan/Programação/WebDev/Portifolio - Bryan Diniz/web/src/pages/Projects/index.js"],"names":["React","useState","useContext","useRef","Link","Container","Project","PageTitle","ProjectTitle","ProjectDescription","CodeBlock","CodeLine","Projects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,YAAxC,EAAsDC,kBAAtD,EAA0EC,SAA1E,EAAqFC,QAArF,QAAqG,UAArG;;AAEA,SAASC,QAAT,GAAoB;AAEhB,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA5B,CADJ,EAGI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOAHJ,EAQI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,mCAEiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjC,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,4BAI0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ1B,4CAK0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL1C,qDAMmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANnD,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,wBAQsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARtB,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,qCAUwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVxC,mDAW2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAX3D,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,wCAa2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAb3C,4BAc0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAd1B,oDAekD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAflD,wBAgBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBtB,SAiBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBZ,SAkBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBZ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,6CAHA,CARJ,CAHJ,CADJ;AA8CH;;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext, useRef } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Container, Project, PageTitle, ProjectTitle, ProjectDescription, CodeBlock, CodeLine } from './styles';\n\nfunction Projects() {\n\n    return (\n        <Container>\n            <PageTitle>Projetos</PageTitle>\n\n            <Project>\n                <Link to={'/projects/chat'}><ProjectTitle>Chat em tempo real com websockets</ProjectTitle></Link>\n\n                <ProjectDescription>\n                    Projeto de um chat em tempo real feito utilizando Node, Express e React com a biblioteca socket.io tanto no Client-Side\n                    quanto no Server-side. Tanto o backend quanto o frontend são simples, como podemos ver abaixo:\n                </ProjectDescription>\n\n                <CodeBlock className=\"brush: python\">\n\n            \n                <code>\n                    const express = require('express')<br/>\n                    const http = require('http');<br/>\n                    <br/><br/>\n                    const app = express();<br/>\n                    const server = http.createServer(app);<br/>\n                    const io = require('socket.io').listen(server);<br/>\n                    <br/>\n                    let messageId = 0;<br/>\n                    <br/>\n                    io.on('connection', socket => &#123;<br/>\n                    console.log(`Socket conectado $&#123;socket.id&#125;`);<br/>\n                    <br/>\n                    socket.on('sendMessage', data => &#123;<br/>\n                    data.id = messageId++;<br/>\n                    socket.broadcast.emit('recivedMessage', data);<br/>\n                    console.log(data);<br/>\n                    &#125;);<br/>\n                    &#125;);<br/>\n                    <br/>\n                    server.listen(process.env.PORT || 3333);\n                </code>\n\n\n                </CodeBlock>\n\n            </Project>\n\n\n        </Container>\n    );\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}